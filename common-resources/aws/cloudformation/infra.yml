AWSTemplateFormatVersion: "2010-09-09"
Description: Auto Pokemon Friendly Competition Notifier Common Infra

Resources:
  FriendCompetitionDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: friend_competition
      AttributeDefinitions:
        - AttributeName: competition_name
          AttributeType: S
      KeySchema:
        - AttributeName: competition_name
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      BillingMode: PROVISIONED
  DailyTweetDynamoDBTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: daily_tweet
      AttributeDefinitions:
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: date
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      BillingMode: PROVISIONED

  PokemonFriendlyCompetitionSummaryNotifierECRRepository:
    Type: 'AWS::ECR::Repository'
    Properties:
      RepositoryName: pokemon-friendly-competition-summary-notifier
      ImageTagMutability: IMMUTABLE
      ImageScanningConfiguration:
        ScanOnPush: true
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "Expire untagged images older than 30 days",
                "action": {
                  "type": "expire"
                },
                "selection": {
                  "tagStatus": "untagged",
                  "countType": "sinceImagePushed",
                  "countUnit": "days",
                  "countNumber": 30
                }
              }
            ]
          }

  PokemonFriendlyCompetitionSummaryNotifierECRRepositoryPolicy:
    Type: 'AWS::ECR::RepositoryPolicy'
    Properties:
      RepositoryName: !Ref PokemonFriendlyCompetitionSummaryNotifierECRRepository
      PolicyText: |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:BatchCheckLayerAvailability",
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload"
              ],
              "Principal": "*",
              "Condition": {
                "StringEquals": {
                  "aws:PrincipalType": "AWS",
                  "aws:SecureTransport": "true"
                }
              }
            }
          ]
        }
